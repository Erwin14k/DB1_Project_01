-- Temporal table creation.
CREATE TABLE TEMPORAL (
    VICTIM_NAME VARCHAR2(60) NULL,
    VICTIM_LAST_NAME VARCHAR2(60) NULL,
    VICTIM_DIRECTION VARCHAR2(100) NULL,
    FIRST_SUSPICION_DATE VARCHAR2(100) NULL,
    CONFIRMATION_DATE VARCHAR2(100) NULL,
    DEATH_DATE VARCHAR2(100) NULL,
    VICTIM_STATUS VARCHAR2(60) NULL,
    ASSOCIATED_NAME VARCHAR2(60) NULL,
    ASSOCIATED_LAST_NAME VARCHAR2(60) NULL,
    DATE_MET VARCHAR2(100) NULL,
    PHYSICAL_CONTACT VARCHAR2(60) NULL,
    START_CONTACT_DATE VARCHAR2(100) NULL,
    END_CONTACT_DATE VARCHAR2(100) NULL,
    HOSPITAL_NAME VARCHAR2(60) NULL,
    HOSPITAL_DIRECTION VARCHAR2(100) NULL,
    VICTIM_LOCATION VARCHAR2(100) NULL,
    ARRIVAL_DATE VARCHAR2(100) NULL,
    LEFT_DATE VARCHAR2(100) NULL,
    TREATMENT_NAME VARCHAR2(60) NULL,
    EFECTIVITY NUMBER NULL,
    START_TREATMENT_DATE VARCHAR2(100) NULL,
    END_TREATMENT_DATE VARCHAR2(100) NULL,
    VICTIM_EFECTIVITY NUMBER NULL
);

-- Select all values on TEMPORAL table.
SELECT * FROM TEMPORAL;
--  Delete TEMPORAL table.
DROP TABLE TEMPORAL;
-- Truncate TEMPORAL table.
TRUNCATE TABLE TEMPORAL;


-- Hospital table creation.
CREATE TABLE HOSPITAL (
    HOSPITAL_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    HOSPITAL_NAME VARCHAR2(50) NOT NULL,
    HOSPITAL_DIRECTION VARCHAR2(100) NOT NULL
);


-- Victim table creation.
CREATE TABLE VICTIM (
    VICTIM_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    VICTIM_NAME VARCHAR2(50) NOT NULL,
    VICTIM_LAST_NAME VARCHAR2(50) NOT NULL,
    VICTIM_DIRECTION VARCHAR2(100) NOT NULL,
    VICTIM_STATUS VARCHAR2(20) NOT NULL,
    FIRST_SUSPICION_DATE DATE NOT NULL,
    CONFIRMATION_DATE DATE NOT NULL,
    DEATH_DATE DATE,
    HOSPITAL_ID NUMBER,
    CONSTRAINT FK_HOSPITAL
        FOREIGN KEY (HOSPITAL_ID)
        REFERENCES HOSPITAL(HOSPITAL_ID)
);

-- Associated table creation.
CREATE TABLE ASSOCIATED (
    ASSOCIATED_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ASSOCIATED_NAME VARCHAR2(100) NOT NULL,
    ASSOCIATED_LAST_NAME VARCHAR2(100) NOT NULL
);

-- Contact table creation.
CREATE TABLE CONTACT (
    CONTACT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    VICTIM_ID NUMBER NOT NULL,
    ASSOCIATED_ID NUMBER NOT NULL,
    DATE_MET DATE NOT NULL,
    PHYSICAL_CONTACT VARCHAR2(100) NOT NULL,
    START_CONTACT_DATE DATE NOT NULL,
    END_CONTACT_DATE DATE NOT NULL,
    CONSTRAINT FK_VICTIM FOREIGN KEY (VICTIM_ID) REFERENCES VICTIM(VICTIM_ID),
    CONSTRAINT FK_ASSOCIATED FOREIGN KEY (ASSOCIATED_ID) REFERENCES ASSOCIATED(ASSOCIATED_ID)
);

-- Treatment table creation.
CREATE TABLE TREATMENT (
    TREATMENT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TREATMENT_NAME VARCHAR2(100) NOT NULL,
    EFECTIVITY NUMBER NOT NULL
);

-- Treatment_Victim table creation.
CREATE TABLE TREATMENT_VICTIM (
    TREATMENT_VICTIM_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TREATMENT_ID NUMBER NOT NULL,
    VICTIM_ID NUMBER NOT NULL,
    START_TREATMENT_DATE DATE NOT NULL,
    END_TREATMENT_DATE DATE NOT NULL,
    VICTIM_EFECTIVITY INT NOT NULL,
    CONSTRAINT FK_TREATMENT FOREIGN KEY (TREATMENT_ID) REFERENCES TREATMENT(TREATMENT_ID),
    CONSTRAINT FK_VICTIM_TREATMENT FOREIGN KEY (VICTIM_ID) REFERENCES VICTIM(VICTIM_ID)
);

-- Location table creation.
CREATE TABLE LOCATION (
    LOCATION_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    VICTIM_LOCATION VARCHAR2(200) NOT NULL,
    ARRIVAL_DATE DATE NOT NULL,
    LEFT_DATE DATE NOT NULL,
    HOSPITAL_ID NUMBER ,
    VICTIM_ID NUMBER NOT NULL,
    CONSTRAINT FK_HOSPITAL_LOC FOREIGN KEY (HOSPITAL_ID) REFERENCES HOSPITAL(HOSPITAL_ID),
    CONSTRAINT FK_VICTIM_LOC FOREIGN KEY (VICTIM_ID) REFERENCES VICTIM(VICTIM_ID)
);



-- Drop Model Tables
DROP TABLE CONTACT;
DROP TABLE TREATMENT_VICTIM;
DROP TABLE LOCATION;
DROP TABLE TREATMENT;
DROP TABLE ASSOCIATED;
DROP TABLE VICTIM;
DROP TABLE HOSPITAL;

-- Select All Data From Model Tables
SELECT * FROM HOSPITAL ORDER BY HOSPITAL_ID  ASC;
SELECT * FROM VICTIM ORDER BY VICTIM_ID ASC;
SELECT * FROM ASSOCIATED ORDER BY ASSOCIATED_ID ASC;
SELECT * FROM TREATMENT ORDER BY TREATMENT_ID ASC;
SELECT * FROM CONTACT ORDER BY CONTACT_ID ASC;
SELECT * FROM TREATMENT_VICTIM  ORDER BY TREATMENT_VICTIM_ID ASC;
SELECT * FROM LOCATION  ORDER BY LOCATION_ID ASC;


-- Truncate Model Tables
TRUNCATE TABLE CONTACT;
TRUNCATE TABLE TREATMENT_VICTIM;
TRUNCATE TABLE LOCATION;
TRUNCATE TABLE TREATMENT;
TRUNCATE TABLE ASSOCIATED;
TRUNCATE TABLE VICTIM;
TRUNCATE TABLE HOSPITAL;   


-- Fill The HOSPITAL Table     
INSERT INTO HOSPITAL (HOSPITAL_NAME, HOSPITAL_DIRECTION)
SELECT DISTINCT HOSPITAL_NAME, HOSPITAL_DIRECTION
FROM TEMPORAL
WHERE HOSPITAL_NAME IS NOT NULL AND HOSPITAL_DIRECTION IS NOT NULL AND NOT EXISTS (
	SELECT 1 FROM HOSPITAL WHERE 
	HOSPITAL.HOSPITAL_NAME = TEMPORAL.HOSPITAL_NAME AND HOSPITAL.HOSPITAL_DIRECTION=TEMPORAL.HOSPITAL_DIRECTION);   



-- Fill The VICTIM Table   
INSERT INTO VICTIM (
    VICTIM_NAME, VICTIM_LAST_NAME, VICTIM_DIRECTION, VICTIM_STATUS, FIRST_SUSPICION_DATE,
    CONFIRMATION_DATE, DEATH_DATE, HOSPITAL_ID
	)
SELECT DISTINCT
    TEMPORAL.VICTIM_NAME, TEMPORAL.VICTIM_LAST_NAME, TEMPORAL.VICTIM_DIRECTION, TEMPORAL.VICTIM_STATUS,
    TO_DATE(TEMPORAL.FIRST_SUSPICION_DATE, 'DD/MM/YYYY HH24:MI'), 
    TO_DATE(TEMPORAL.CONFIRMATION_DATE, 'DD/MM/YYYY HH24:MI'), 
    CASE 
        WHEN TEMPORAL.DEATH_DATE IS NULL THEN NULL 
        ELSE TO_DATE(TEMPORAL.DEATH_DATE, 'DD/MM/YYYY HH24:MI') 
    END,
    h.HOSPITAL_ID
FROM 
    TEMPORAL 
    LEFT JOIN HOSPITAL h ON TEMPORAL.HOSPITAL_NAME = h.HOSPITAL_NAME AND TEMPORAL.HOSPITAL_DIRECTION = h.HOSPITAL_DIRECTION
WHERE 
    TEMPORAL.VICTIM_NAME IS NOT NULL AND TEMPORAL.VICTIM_LAST_NAME IS NOT NULL
    AND NOT EXISTS (
        SELECT 1 
        FROM VICTIM 
        WHERE 
            VICTIM.VICTIM_NAME = TEMPORAL.VICTIM_NAME 
            AND VICTIM.VICTIM_LAST_NAME = TEMPORAL.VICTIM_LAST_NAME 
            AND VICTIM.VICTIM_DIRECTION = TEMPORAL.VICTIM_DIRECTION 
    );



-- Fill The ASSOCIATED Table     
INSERT INTO ASSOCIATED  (ASSOCIATED_NAME, ASSOCIATED_LAST_NAME)
SELECT DISTINCT ASSOCIATED_NAME, ASSOCIATED_LAST_NAME
FROM TEMPORAL
WHERE ASSOCIATED_NAME IS NOT NULL AND ASSOCIATED_LAST_NAME IS NOT NULL AND NOT EXISTS (
	SELECT 1 FROM ASSOCIATED WHERE 
	ASSOCIATED.ASSOCIATED_NAME = TEMPORAL.ASSOCIATED_NAME AND ASSOCIATED.ASSOCIATED_LAST_NAME=TEMPORAL.ASSOCIATED_LAST_NAME);   



-- Fill The TREATMENT Table     
INSERT INTO TREATMENT  (TREATMENT_NAME, EFECTIVITY)
SELECT DISTINCT TREATMENT_NAME, EFECTIVITY
FROM TEMPORAL
WHERE TREATMENT_NAME  IS NOT NULL AND EFECTIVITY IS NOT NULL AND NOT EXISTS (
	SELECT 1 FROM TREATMENT WHERE 
	TREATMENT.TREATMENT_NAME = TEMPORAL.TREATMENT_NAME);  


-- Fill The CONTACT Table
INSERT INTO CONTACT(VICTIM_ID, ASSOCIATED_ID, DATE_MET, PHYSICAL_CONTACT, START_CONTACT_DATE, END_CONTACT_DATE)
SELECT DISTINCT v.VICTIM_ID, a.ASSOCIATED_ID, TO_DATE(TEMPORAL.DATE_MET, 'DD/MM/YYYY HH24:MI'), TEMPORAL.PHYSICAL_CONTACT,
        TO_DATE(TEMPORAL.START_CONTACT_DATE, 'DD/MM/YYYY HH24:MI'), TO_DATE(TEMPORAL.END_CONTACT_DATE, 'DD/MM/YYYY HH24:MI')
FROM TEMPORAL 
LEFT JOIN VICTIM v ON TEMPORAL.VICTIM_NAME = v.VICTIM_NAME AND TEMPORAL.VICTIM_LAST_NAME = v.VICTIM_LAST_NAME 
LEFT JOIN ASSOCIATED a ON TEMPORAL.ASSOCIATED_NAME = a.ASSOCIATED_NAME AND TEMPORAL.ASSOCIATED_LAST_NAME = a.ASSOCIATED_LAST_NAME 
WHERE 
    TEMPORAL.VICTIM_NAME IS NOT NULL AND 
    TEMPORAL.VICTIM_LAST_NAME IS NOT NULL AND 
    TEMPORAL.ASSOCIATED_NAME IS NOT NULL AND 
    TEMPORAL.ASSOCIATED_LAST_NAME IS NOT NULL AND 
    TEMPORAL.DATE_MET IS NOT NULL AND 
    TEMPORAL.PHYSICAL_CONTACT IS NOT NULL AND 
    TEMPORAL.START_CONTACT_DATE IS NOT NULL AND 
    TEMPORAL.END_CONTACT_DATE IS NOT NULL AND
    NOT EXISTS (
        SELECT 1
        FROM CONTACT c
        WHERE c.VICTIM_ID = v.VICTIM_ID AND c.ASSOCIATED_ID = a.ASSOCIATED_ID  AND c.PHYSICAL_CONTACT = TEMPORAL.PHYSICAL_CONTACT
    )



-- Fill The TREATMENT_VICTIM Table   
INSERT INTO TREATMENT_VICTIM (TREATMENT_ID, VICTIM_ID,START_TREATMENT_DATE,END_TREATMENT_DATE,VICTIM_EFECTIVITY)
SELECT DISTINCT t.TREATMENT_ID, v.VICTIM_ID, TO_DATE(TEMPORAL.START_TREATMENT_DATE, 'DD/MM/YYYY HH24:MI'),
        TO_DATE(TEMPORAL.END_TREATMENT_DATE, 'DD/MM/YYYY HH24:MI'),TEMPORAL.VICTIM_EFECTIVITY
FROM TEMPORAL 
LEFT JOIN VICTIM v ON TEMPORAL.VICTIM_NAME = v.VICTIM_NAME AND TEMPORAL.VICTIM_LAST_NAME = v.VICTIM_LAST_NAME 
LEFT JOIN TREATMENT t ON TEMPORAL.TREATMENT_NAME  = t.TREATMENT_NAME 
WHERE 
    TEMPORAL.VICTIM_NAME IS NOT NULL AND 
    TEMPORAL.VICTIM_LAST_NAME IS NOT NULL AND 
    TEMPORAL.TREATMENT_NAME IS NOT NULL AND 
    TEMPORAL.START_TREATMENT_DATE IS NOT NULL AND 
    TEMPORAL.END_TREATMENT_DATE IS NOT NULL AND 
    TEMPORAL.VICTIM_EFECTIVITY IS NOT NULL  AND
    NOT EXISTS (
        SELECT 1
        FROM TREATMENT_VICTIM tv
        WHERE tv.VICTIM_ID = v.VICTIM_ID AND tv.TREATMENT_ID = t.TREATMENT_ID  AND TEMPORAL.VICTIM_EFECTIVITY  = tV.VICTIM_EFECTIVITY
    )



-- Fill The LOCATION Table   
INSERT INTO LOCATION (VICTIM_LOCATION, ARRIVAL_DATE,LEFT_DATE,HOSPITAL_ID,VICTIM_ID)
SELECT DISTINCT TEMPORAL.VICTIM_LOCATION , TO_DATE(TEMPORAL.ARRIVAL_DATE, 'DD/MM/YYYY HH24:MI'),
	TO_DATE(TEMPORAL.LEFT_DATE, 'DD/MM/YYYY HH24:MI'),v.HOSPITAL_ID,v.VICTIM_ID
FROM TEMPORAL 
LEFT JOIN VICTIM v ON TEMPORAL.VICTIM_NAME = v.VICTIM_NAME AND TEMPORAL.VICTIM_LAST_NAME = v.VICTIM_LAST_NAME 
WHERE 
	TEMPORAL.VICTIM_NAME IS NOT NULL AND 
    TEMPORAL.VICTIM_LAST_NAME IS NOT NULL AND 
    TEMPORAL.VICTIM_LOCATION IS NOT NULL AND 
    TEMPORAL.ARRIVAL_DATE IS NOT NULL AND 
    TEMPORAL.LEFT_DATE IS NOT NULL AND 
    NOT EXISTS (
        SELECT 1
        FROM LOCATION l
        WHERE l.VICTIM_ID = v.VICTIM_ID AND l.HOSPITAL_ID = v.HOSPITAL_ID  AND TEMPORAL.VICTIM_LOCATION  = l.VICTIM_LOCATION 
    )
